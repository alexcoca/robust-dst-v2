"""This module contains lookup tables used by various parsing algorithms to convert
model predictions to SGD-format Dialogues."""


class ParserMetaMixin:
    LOWER_TO_SCHEMA_CASE_MAPPING = {
        "true": "True",
        "false": "False",
        "economy": "Economy",
        "economy extra": "Economy extra",
        "flexible": "Flexible",
        "music": "Music",
        "sports": "Sports",
        "premium economy": "Premium Economy",
        "business": "Business",
        "first class": "First Class",
        "united airlines": "United Airlines",
        "american airlines": "American Airlines",
        "delta airlines": "Delta Airlines",
        "southwest airlines": "Southwest Airlines",
        "alaska airlines": "Alaska Airlines",
        "british airlines": "British Airways",
        "air canada": "Air Canada",
        "air france": "Air France",
        "tv": {
            "Music_1": "TV",
            "Music_11": "TV",
            "Music_12": "TV",
            "Music_13": "TV",
            "Music_14": "TV",
            "Music_15": "TV",
            "Music_2": "TV",
            "Music_21": "TV",
            "Music_22": "TV",
            "Music_23": "TV",
            "Music_24": "TV",
            "Music_25": "TV",
        },
        "kitchen speaker": {
            "Music_1": "Kitchen speaker",
            "Music_11": "Kitchen speaker",
            "Music_12": "Kitchen speaker",
            "Music_13": "Kitchen speaker",
            "Music_14": "Kitchen speaker",
            "Music_15": "Kitchen speaker",
            "Music_2": "kitchen speaker",
            "Music_21": "kitchen speaker",
            "Music_22": "kitchen speaker",
            "Music_23": "kitchen speaker",
            "Music_24": "kitchen speaker",
            "Music_25": "kitchen speaker",
        },
        "bedroom_speaker": {
            "Music_1": "Bedroom speaker",
            "Music_11": "Bedroom speaker",
            "Music_12": "Bedroom speaker",
            "Music_13": "Bedroom speaker",
            "Music_14": "Bedroom speaker",
            "Music_15": "Bedroom speaker",
            "Music_2": "bedroom speaker",
            "Music_21": "bedroom speaker",
            "Music_22": "bedroom speaker",
            "Music_23": "bedroom speaker",
            "Music_24": "bedroom speaker",
            "Music_25": "bedroom speaker",
        },
        "compact": "Compact",
        "standard": "Standard",
        "full-size": "Full-size",
        "pool": "Pool",
        "regular": {
            "RideSharing_1": "Regular",
            "RideSharing_11": "Regular",
            "RideSharing_12": "Regular",
            "RideSharing_13": "Regular",
            "RideSharing_14": "Regular",
            "RideSharing_15": "Regular",
            "RideSharing_2": "Regular",
            "RideSharing_21": "Regular",
            "RideSharing_22": "Regular",
            "RideSharing_23": "Regular",
            "RideSharing_24": "Regular",
            "RideSharing_25": "Regular",
            "Movies_1": "regular",
            "Movies_11": "regular",
            "Movies_12": "regular",
            "Movies_13": "regular",
            "Movies_14": "regular",
            "Movies_15": "regular",
        },
        "luxury": "Luxury",
        "gynecologist": "Gynecologist",
        "ent specialist": "ENT Specialist",
        "ophthalmologist": "Ophthalmologist",
        "general practitioner": "General Practitioner",
        "dermatologist": "Dermatologist",
        "place of worship": "Place of Worship",
        "theme park": "Theme Park",
        "museum": "Museum",
        "historical landmark": "Historical Landmark",
        "park": "Park",
        "tourist attraction": "Tourist Attraction",
        "sports venue": "Sports Venue",
        "shopping area": "Shopping Area",
        "performing arts venue": "Performing Arts Venue",
        "nature preserve": "Nature Preserve",
        "none": "None",
        "english": "English",
        "mandarin": "Mandarin",
        "spanish": "Spanish",
        "psychologist": "Psychologist",
        "family counselor": "Family Counselor",
        "psychiatrist": "Psychiatrist",
        "theater": "Theater",
        "south african airways": "South African Airways",
        "lot polish airlines": "LOT Polish Airlines",
        "latam brasil": "LATAM Brasil",
        "hindi": "Hindi",
        "french": "French",
        "living room": "Living room",
        "kitchen": "Kitchen",
        "patio": "Patio",
        "hatchback": "Hatchback",
        "sedan": "Sedan",
        "suv": "SUV",
        "value": "Value",
    }
    """"Lookup table to restore categorical values to schema casing if the
    model predicts lowercases. Values my be Union[str, dict[str, str], with
    mappings when a value has different casings in different services."""

    TIME_SLOTS = {
        "alert_time",
        "depart_time_to_origin",
        "time_flight_arrives_to_origin_airport",
        "destination_flight_departure_time",
        "start_time",
        "local_destination_to_origin_arrival_time",
        "from_origin_departure_time",
        "time_of_alarm",
        "arrival_time_at_destination",
        "local_time_of_departure_from_origin",
        "event_time",
        "vehicle_retrieval_time",
        "car_rental_pickup_time",
        "outbound_arrival_time",
        "event_start_time",
        "free_time_end",
        "pick_up_time_for_rental",
        "dentist_appointment_time",
        "time_of_therapy_visit",
        "take_off_time_to_destination",
        "arrival_time_return_flight",
        "new_alarm_time",
        "return_flight_arrival_time",
        "appt_time",
        "destination_departure_local_time",
        "origin_flight_departure_time",
        "consultation_time",
        "arrival_time_outbound",
        "departure_time",
        "tentative_reservation_time",
        "departure_hour",
        "event_starts_at",
        "outbound_local_destination_arrival_time",
        "return_arrival_time",
        "arrival_time_of_inbound_flight",
        "clock_time_of_alarm",
        "starting_time",
        "arrival_time_return",
        "alarm_time_to_set",
        "returning_departure_time",
        "movie_time",
        "inbound_arrival_local_time",
        "available_start_time",
        "available_time_slot_start",
        "time_of_outbound_departure",
        "availability_end_time",
        "leave_time",
        "time_of_new_alarm",
        "departing_time_from_origin",
        "event_start",
        "showtime",
        "local_departing_time_to_destination",
        "destination_to_origin_arrival_time",
        "time_of_pickup",
        "local_time_of_departure_from_destination",
        "rental_pick_up_time",
        "departing_time_of_return",
        "arrival_time_of_outbound_flight",
        "free_time_start",
        "return_flight_departure_time",
        "time_of_departure",
        "time_of_show",
        "origin_to_destination_departure_time",
        "landing_time_at_destination",
        "bus_leaving_time",
        "rental_start_time",
        "arrival_time",
        "appointment_start_time",
        "depart_time_out",
        "time_of_return_arrival",
        "restaurant_reservation_time",
        "scheduled_time",
        "additional_alarm_time",
        "reservation_time",
        "departing_time",
        "dentist_visit_time",
        "bus_departure_time",
        "outbound_legflight_arrival_time",
        "available_end_time",
        "time_slot_start_time",
        "time_of_visit",
        "end_of_the_available_event",
        "leaving_time",
        "time_of_return_departure",
        "time_to_reserve",
        "time_flight_departs_from_origin",
        "destination_to_origin_departure_time",
        "to_destination_arrival_time",
        "journey_start_time",
        "departing_time_origin",
        "alarm_time",
        "new_set_time",
        "return_legflight_arrival_time",
        "requested_time_of_reservation",
        "return_departure_time",
        "rental_pickup_time",
        "outbound_flight_departing_time",
        "opening_time_of_the_event",
        "outbound_departure_time",
        "depart_time_return",
        "inbound_arrival_time",
        "time_to_see_stylist",
        "starts_at",
        "return_trip_flight_departure_time",
        "car_retrieval_time",
        "start_time_of_trip",
        "destination_arrival_time",
        "end_time",
        "to_destination_departure_time",
        "return_trip_flight_arrival_time",
        "arrival_of_destination_to_origin_flight",
        "appointment_time",
        "when",
        "doctor_appointment_time",
        "start_time_of_journey",
        "pick_up_time",
        "origin_to_destination_arrival_time",
        "new_alert_time",
        "exact_time_of_appointment",
        "time_of_departure_to_origin",
        "inbound_departure_time",
        "local_time_of_arrival_from_destination",
        "pickup_time",
        "time",
        "departure_time_outbound_leg",
        "return_legflight_departure_time",
        "dining_time",
        "time_of_outbound_arrival",
        "current_alarm_time",
        "time_flight_arrives_to_destination",
        "outbound_flight_arrival_time",
        "dental_appt_time",
        "bus_time_departure",
        "outbound_legflight_departure_time",
        "begin_time",
        "outbound_flight_departure_time",
        "car_pickup_time",
        "available_slot_start_time",
        "availability_begin_time",
        "time_of_appointment",
        "scheduled_start_time",
        "stylist_visit_time",
        "returning_arrival_time",
        "consult_time",
        "event_begin_time",
        "outbound_local_arrival_time",
        "arrival_time_outbound_flight",
        "time_of_day",
        "show_time",
        "movie_showing_time",
        "availability_time_end",
        "origin_flight_arrival_time",
        "local_time_of_arrival_from_origin",
    }
    """Used by the parser when the target seq indices are separated by value by : to
    help correctly merge the values after initial splitting."""

    CATEGORICAL_SPECIAL_VALUES = {"dontcare"}
    """Use to suppress warnings."""

    SPECIAL_SLOT_VALUES = {"Media_2": {"subtitle_language": "no subtitles"}}
    """These categorical slots take as values the special token predicted by
    the model to indicate a slot is inactive. We remap this value to the
    innermost value during pre-processing to avoid ambiguity."""

    UNAMBIGUOUS_TARGET_SEPARATORS = {"=>", "="}
    """Separators which do not result in sequences with multiple parses.
    Used to call a parsing algorithm which does not use context to handle
    ambiguous parses.
    """

    UNAMBIGUOUS_VALUE_SEPARATORS = {" || "}
    """Value separators which does not appear in the SGD slot values."""
